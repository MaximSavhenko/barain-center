generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now()) @map("create_at")
  updatedAt DateTime @updatedAt @map("update_at")

  topics   Topic[]
  notes    Note[]
  tags     Tag[]
  settings UserSetting?

  @@map("users")
}

model Topic {
  id          String   @id @default(cuid())
  title       String
  description String?
  createdAt   DateTime @default(now()) @map("create_at")
  updatedAt   DateTime @updatedAt @map("update_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  checklist ChecklistItem[]
  notes     Note[]

  @@map("topics")
}

model ChecklistItem {
  id    Int     @id @default(autoincrement())
  title String
  done  Boolean @default(false)
  order Int?

  topic   Topic  @relation(fields: [topicId], references: [id])
  topicId String @map("topic_id")

  @@map("checklist_items")
}

model Note {
  id        String   @id @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now()) @map("create_at")
  updatedAt DateTime @updatedAt @map("update_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  topic   Topic?  @relation(fields: [topicId], references: [id])
  topicId String? @map("topic_id")

  tags NoteTag[]

  @@map("notes")
}

model Tag {
  id    String  @id @default(cuid())
  name  String
  color String?

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  notes NoteTag[]

  @@map("tags")
}

model NoteTag {
  noteId String @map("note_id")
  tagId  String @map("tag_id")

  note Note @relation(fields: [noteId], references: [id])
  tag  Tag  @relation(fields: [tagId], references: [id])

  @@id([noteId, tagId])
  @@map("note_tags")
}

model UserSetting {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @map("user_id")

  darkMode       Boolean @default(false) @map("dark_mode")
  language       String  @default("ru")
  showDeadTopics Boolean @default(true) @map("show_dead_topics")

  @@map("user_settings")
}
